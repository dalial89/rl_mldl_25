import gym
import pandas as pd
from stable_baselines3 import PPO
from stable_baselines3.common.evaluation import evaluate_policy

def evaluate_setup(model_path, env_name, seed, udr, setup_name, episodes=100):
    model = PPO.load(model_path)
    env = gym.make(env_name)
    mean_reward, std_reward = evaluate_policy(model, env, n_eval_episodes=episodes, render=False)

    return {
        'setup': setup_name,
        'env': env_name,
        'seed': seed,
        'udr': udr,
        'mean': mean_reward,
        'std': std_reward,
        'episodes': episodes
    }

def main():
    results = []

    # Configurazioni da testare
    configs = [
        ('Simopt_ppo_policy_final', 'CustomHopper-source-v0', 10, True, 'source→source'),
        ('Simopt_ppo_policy_final', 'CustomHopper-target-v0', 10, True, 'source→target'),
        ('Simopt_ppo_policy_final', 'CustomHopper-target-v0', 10, True, 'target→target')
    ]

    for model_path, env_name, seed, udr, setup_name in configs:
        result = evaluate_setup(model_path, env_name, seed, udr, setup_name)
        results.append(result)

    # Crea il DataFrame
    df_results = pd.DataFrame(results)

    # Salva la tabella in CSV
    df_results.to_csv('results_table.csv', index=False)

    # Mostra tabella
    print(df_results)

if __name__ == '__main__':
    main()
